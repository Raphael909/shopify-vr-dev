{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
    @media screen and (max-width: 749px) {
  .view_all
  {
    display: none;
  }
    }
   .view_all_mobile_view
  {
    display: none;
  }
  @media screen and (max-width: 749px) {
    .view_all_mobile_view {
        display: block;
        font-size: 15px;
        font-family: 'Helvetica';
        margin: 0 41%;
    }
}
    
.rel {
    display: none;
    position: absolute;
    top: 245px;
    left: 44%;
    border: none;
    cursor: pointer;
}

    .title-image2 {
    max-width: 36%;
    height: 12px;
}
  @media screen and (min-width: 750px)
  {
  button.product-add-to-cart-1 {
    background: none;
    border: none;
    position: absolute;
    left: 43%;
    cursor: pointer;
        bottom: -17px;
}
  }
  @media screen and (max-width: 749px)
  {
    button.product-add-to-cart-1 {
    background: none;
    border: none;
    position: absolute;
    left: 43%;
    cursor: pointer;
        top: -29px;
}
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <product-recommendations
    class="related-products page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    data-url="{{ routes.product_recommendations_url }}?limit={{ section.settings.products_to_show }}"
    data-section-id="{{ section.id }}"
    data-product-id="{{ product.id }}"
  >
    {% if section.settings.title_image != blank %}
      <div class="title-image-wrapper">
        <img src="{{ section.settings.title_image | img_url: 'medium' }}" alt="{{ section.settings.title }}" class="title-image2">
      </div>
    {% endif %}
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h1
        id="SectionHeading-{{ section.id }}"
        class="blog__title1 inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {{ section.settings.heading1 }}
      </h1>
      <h2 class="related-products__heading inline-richtext {{ section.settings.heading_size }}">
        {{ section.settings.heading }}
        <span class="view_all"><a href="/collections/all"class="view-all-button">View All</a></span>
      </h2>
      <ul
        class="grid product-grid grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down"
        role="list"
      >
        {% assign skip_card_product_styles = false %}
          
        {% for recommendation in recommendations.products %}
          <li class="grid__item">
              
            {% render 'card-product',
              card_product: recommendation,
              media_aspect_ratio: section.settings.image_ratio,
              image_shape: section.settings.image_shape,
              show_secondary_image: section.settings.show_secondary_image,
              show_vendor: section.settings.show_vendor,
              show_rating: section.settings.show_rating,
              skip_styles: skip_card_product_styles
            %}
       <form action="/cart/add" method="post" id="product-form-{{ recommendation.id }}" class="cart-product">
                        <input type="hidden" name="id" value="{{ recommendation.variants.first.id }}">
                        <div>
                            <button type="submit" class="product-add-to-cart-1" name="add" aria-label="Add to cart">
                                <svg viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg" class="icon-car">
                                    <rect fill="none" height="256" width="256"/>
                                    <path d="M62.5,144H188.1a15.9,15.9,0,0,0,15.7-13.1L216,64H48" fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>
                                    <path d="M184,184H69.8L41.9,30.6A8,8,0,0,0,34.1,24H16" fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>
                                    <circle cx="80" cy="204" fill="none" r="20" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>
                                    <circle cx="184" cy="204" fill="none" r="20" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="8"/>
                                </svg>
                  
                            </button>
                      </div>
                    </form>


          </li>
          {% assign skip_card_product_styles = true %}
          
        {% endfor %}
      </ul>
      
    {% endif %}
    <span class="view_all_mobile_view"><a href="/collections/all" class="view-all-button">View All</a></span>
  </product-recommendations>
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {% endif %}
</div>

<script>

document.addEventListener('DOMContentLoaded', function() {
  const addToCartButtons = document.querySelectorAll('.product-add-to-cart-1');

  addToCartButtons.forEach(button => {
    button.addEventListener('click', function(event) {
      event.preventDefault();
      const form = this.closest('form');
      const formData = new FormData(form);
      const icon = this.querySelector('.icon-car path');

      // Change the fill color to black when added to cart
      icon.style.fill = 'black'; // Change fill color if needed
      icon.style.stroke = 'black'; // Change stroke color if needed

      // Add product to cart using AJAX
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData,
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Accept': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        updateCartIcon(); // Update the cart icon with the new item
        icon.classList.add('icon-added'); // Add the icon-added class to change the icon color
      })
      .catch(error => console.error('Error:', error));
    });
  });

  function updateCartIcon() {
    fetch('/cart')
      .then(response => response.text())
      .then(html => {
        var parser = new DOMParser();
        var doc = parser.parseFromString(html, 'text/html');
        var newCartIconBubble = doc.querySelector('#cart-icon-bubble');
        var currentCartIconBubble = document.querySelector('#cart-icon-bubble');
        if (currentCartIconBubble) {
          currentCartIconBubble.innerHTML = newCartIconBubble.innerHTML;
        } else {
          console.error('Cart icon bubble element not found');
        }
      })
      .catch(error => console.error('Error:', error));
  }
});


</script>


{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
     {
      "type": "inline_richtext",
      "id": "heading1",
      "default": "t:sections.featured-blog.settings.heading.default",
      "label": "t:sections.featured-blog.settings.heading.label"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.related-products.settings.paragraph__1.default",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.related-products.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.related-products.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.related-products.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.related-products.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.related-products.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.related-products.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.related-products.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
     {
      "type": "image_picker",
      "id": "title_image",
      "label": "Image Above Title",
      "info": "Upload an image to be displayed just above the section title."
    }
  ],
  "presets": [
    {
      "name": "cart related products"
    }
  ]
}
{% endschema %}
