{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
{{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{% endif %}

{% if section.settings.enable_quick_add %}
{{ 'quick-add.css' | asset_url | stylesheet_tag }}
<script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{% endif %}

{% style %}
.section-{{ section.id }}-padding {
  padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
  padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}

@media screen and (min-width: 750px) {
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
}
{% endstyle %}
<style>
  .collection-cart button {
    background: black;
    padding: 10px 52px;
    color: white;
    border-radius: 4px;
    text-transform: uppercase;
    cursor: pointer;
}
  .swatch1
  {
    cursor: pointer;
  }
  .var1 {
    border: 1px solid #cdcdcd;
    border-radius: 50%;
    margin: 2px;
    width: 40px;
    display: inline-block;
        background: #efedea7d;
}
  .var1:hover
  {
    cursor: pointer;
     border: 1px solid gray;
  }
</style>
<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}">
  {% paginate collection.products by section.settings.products_per_page %}
  {% if section.settings.enable_sorting and section.settings.filter_type == 'vertical' %}
  <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
    <form class="facets-vertical-form" id="FacetSortForm">
      <div class="facet-filters sorting caption">
        <div class="facet-filters__field">
          <h2 class="facet-filters__label caption-large text-body">
            <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
          </h2>
          <div class="select">
            {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
            <select name="sort_by" class="facet-filters_sort select_select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
              {% for option in collection.sort_options %}
              <option value="{{ option.value | escape }}" {% if option.value == sort_by %} selected="selected" {% endif %}>
                {{ option.name | escape }}
              </option>
              {% endfor %}
            </select>
            {% render 'icon-caret' %}
          </div>
        </div>
        <noscript>
          <button type="submit" class="facets__button-no-js button button--secondary">
            {{ 'products.facets.sort_button' | t }}
          </button>
        </noscript>
      </div>
      <div class="product-count-vertical light" role="status">
        <h2 class="product-count__text text-body">
          <span id="ProductCountDesktop">
            {% if collection.results_count %}
            {{
              'templates.search.results_with_count'
              | t: terms: collection.terms, count: collection.results_count
            }}
            {% elsif collection.products_count == collection.all_products_count %}
            {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
            {% else %}
            {{
              'products.facets.product_count'
              | t: product_count: collection.products_count, count: collection.all_products_count
            }}
            {% endif %}
          </span>
        </h2>
        {% render 'loading-spinner' %}
      </div>
      
    </form>
  </facet-filters-form>
  {% endif %}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {% if section.settings.enable_filtering or section.settings.enable_sorting %}
    <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
      {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type, paginate: paginate %}
    </aside>
    {% endif %}

    <div class="product-grid-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" id="ProductGridContainer" {% if settings.animations_reveal_on_scroll %} data-cascade {% endif %}>
      {% if collection.products.size == 0 %}
      <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
        <div class="loading-overlay gradient"></div>
        <div class="title-wrapper center">
          <h2 class="title title--primary">
            {{ 'sections.collection_template.empty' | t }}
            <br>
            {{
              'sections.collection_template.use_fewer_filters_html'
              | t: link: collection.url, class: 'underlined-link link'
            }}
          </h2>
        </div>
      </div>
      {% else %}
     <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
        <div class="loading-overlay gradient"></div>
        <ul id="product-grid" data-id="{{ section.id }}" class="grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop">
          {% for product in collection.products %}
          <li class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" {% if settings.animations_reveal_on_scroll %} data-cascade style="--animation-order: {{ forloop.index }};" {% endif %}>
            {% render 'card-product', 
              card_product: product, 
              media_aspect_ratio: section.settings.image_ratio, 
              image_shape: section.settings.image_shape, 
              show_secondary_image: section.settings.show_secondary_image, 
              show_vendor: section.settings.show_vendor, 
              show_rating: section.settings.show_rating, 
              lazy_load: forloop.index > 2, 
              show_quick_add: section.settings.enable_quick_add, 
              section_id: section.id 
            %}
            <div class="quantity-controls" id="quantity-controls-{{ product.id }}" style="display: none;">
              <select name="ids-{{ product.id }}" id="Variants-{{ product.id }}" class="select__select variant-selector" form="product-form-{{ product.id }}" style="display: block;">
                {%- for variant in product.variants -%}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %}
                  {% if variant.available == false %} disabled {% endif %} value="{{ variant.id }}">
                  {%- liquid
                    echo variant.title
                    echo variant.price | money | strip_html | prepend: ' - '
                    if variant.available == false
                      echo 'products.product.sold_out' | t | prepend: ' - '
                    endif
                    if variant.quantity_rule.increment > 1
                      echo 'products.product.quantity.multiples_of' | t: quantity: variant.quantity_rule.increment | prepend: ' - '
                    endif
                    if variant.quantity_rule.min > 1
                      echo 'products.product.quantity.minimum_of' | t: quantity: variant.quantity_rule.min | prepend: ' - '
                    endif
                    if variant.quantity_rule.max != null
                      echo 'products.product.quantity.maximum_of' | t: quantity: variant.quantity_rule.max | prepend: ' - '
                    endif
                    assign cart_quantity = cart | item_count_for_variant: variant.id
                    if cart_quantity > 0
                      echo 'products.product.quantity.in_cart_html' | t: quantity: cart_quantity | prepend: ' - '
                    endif
                  -%}
                </option>
                {%- endfor -%}
              </select>
              {%- assign cart_qty = cart
                    | item_count_for_variant: product.selected_or_first_available_variant.id
                  -%}
              <quantity-input class="quantity" data-url="{{ product.url }}" data-section="{{ section.id }}">
                <button class="quantity__button minus" data-product-id="{{ product.id }}"  name="minus" type="button">
                  <span class="visually-hidden">{{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}</span>
                  {% render 'icon-minus' %}
                </button>
                <input class="quantity__input" type="number" name="quantity" id="Quantity-{{ product.id }}" data-cart-quantity="{{ cart_qty }}" data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}" min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                  {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                    data-max="{{ product.quantity_rule.max }}" max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                  {% endif %}
                  step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}" value="{{ product.selected_or_first_available_variant.quantity_rule.min }}" form="product-form-{{ product.id }}">
                <button class="quantity__button plus" data-product-id="{{ product.id }}" name="plus" type="button">
                  <span class="visually-hidden ">{{- 'products.product.quantity.increase' | t: product: product.title | escape -}}</span>
                  {% render 'icon-plus' %}
                </button>
              </quantity-input>
            </div>
            <br>
            <div class="collection-cart" id="cart-controls-{{ product.id }}">
              {% for variant in product.variants %}
              <input type="hidden" class="variantgetid" value="{{ variant.id }}">
              {% endfor %}
              <button type="button" class="add-to-cart-btn" data-product-id="{{ product.id }}">Add to Cart</button>
            </div>
          </li>
          {% endfor %}
        </ul>
        {% if paginate.pages > 1 %}
        {% render 'pagination', paginate: paginate, anchor: '' %}
        {% endif %}
      </div>
      {% endif %}
    </div>
  </div>
  {% endpaginate %}
  {% if section.settings.image_shape == 'arch' %}
  {% render 'mask-arch' %}
  {% endif %}
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', function(event) {
      if (event.target.classList.contains('add-to-cart-btn') || event.target.classList.contains('plus')) {
        var productId = event.target.getAttribute('data-product-id');
        var variantId = document.querySelector("select[name='ids-" + productId + "']").value;
        var quantityselect = event.target.getAttribute('dat-cart-quantity');
        var quantityInput = document.querySelector("#Quantity-" +productId);
        var quantity = parseInt(quantityInput.value);

        var formObj = {
          quantity: 1,
          id: variantId
        };

        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formObj)
        })
        .then(response => response.json())
        .then(data => {
          console.log('Product added to cart', data);
          quantityInput.value = quantity;
          document.getElementById('cart-controls-' + productId).style.display = 'none';
          document.getElementById('quantity-controls-' + productId).style.display = 'block';
          updateCartIcon(); // Update the cart icon
        })
        .catch(error => {
          console.error('Error adding product to cart', error);
        });
      }
    });
     function updateCartIcon() {
      fetch('/cart')
        .then(response => response.text())
        .then(html => {
          var parser = new DOMParser();
          var doc = parser.parseFromString(html, 'text/html');
          var newCartIconBubble = doc.querySelector('#cart-icon-bubble');
          var currentCartIconBubble = document.querySelector('#cart-icon-bubble');
          currentCartIconBubble.innerHTML = newCartIconBubble.innerHTML;
        });
    }
  });
   document.addEventListener('DOMContentLoaded', function() {
console.log('document.query', document.querySelectorAll('.quantity-controls .quantity__button.minus'));
     
     document.querySelectorAll('.quantity-controls .quantity__button.minus').forEach(function(item){
       item.addEventListener('click', function() {
         console.log('hello', this, typeof item.closest('.quantity').querySelector('.quantity__input').value)
         var Quantity = parseInt(".quantity__input");
          console.log(Quantity)
          })
     })
    document.addEventListener('click', function(event) {
      console.log('callls', event)
      if (event.target.classList.contains('minus')) {
        var productId = event.target.getAttribute('data-product-id');
        var quantityInput = document.querySelector("#Quantity-" + productId).value; 
        var quantity = parseInt(quantityInput.value);
        var variantId = document.querySelector("select[name='ids-" + productId + "']").value;
        var formObj = {
            quantity: Quantity - 1,
            id: variantId
          };
          fetch('/cart/change.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formObj)
          })
          .then(response => response.json())
          .then(data => {
            console.log('Quantity updated in cart', data);
            quantityInput.value = quantity-1; 
            updateCartIcon(); 
          })
          .catch(error => {
            console.error('Error updating quantity in cart', error);
          });
        }
    });

    function updateCartIcon() {
      fetch('/cart')
        .then(response => response.text())
        .then(html => {
          var parser = new DOMParser();
          var doc = parser.parseFromString(html, 'text/html');
          var newCartIconBubble = doc.querySelector('#cart-icon-bubble');
          var currentCartIconBubble = document.querySelector('#cart-icon-bubble');
          currentCartIconBubble.innerHTML = newCartIconBubble.innerHTML;
        });
    }
  });


</script>


{% schema %}
{
  "name": "product",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}